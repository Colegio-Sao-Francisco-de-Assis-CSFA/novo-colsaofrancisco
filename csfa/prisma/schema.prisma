generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            String    @id @default(cuid()) @db.Char(25)
  nome          String?   @db.VarChar(100)
  email         String    @unique @db.VarChar(145)
  emailVerified DateTime?
  image         String?
  setor         Setor
  posts         Post[]
}

model Post {
  id      String  @id @default(cuid()) @db.Char(25)
  title   String  @db.VarChar(100)
  content String? @db.Text
  autor   Usuario @relation(fields: [autorId], references: [id], onDelete: Cascade)
  autorId String  @db.Char(25)
}

model VerificationToken {
  identifier String
  token      String  @unique @db.VarChar(25)
  expires    DateTime

  @@unique([identifier, token])
}

enum Setor {
  COORDENACAO
  PROFESSOR
  DESIGNER
  INFORMATICA
}

model Questao {
  id        String   @id @default(cuid()) @db.Char(25)// Identificador único
  nome      String   // Nome da questão
  conteudo  String   // Conteúdo da questão
  tag       String?  // Tag opcional para categorizar a questão
  type      String   // Tipo da questão
  createdAt DateTime @default(now()) // Data de criação
  updatedAt DateTime @updatedAt // Data de atualização

  provas    ProvaQuestao[] // Relação com provas (muitos para muitos)
}

model Prova {
  id        String   @id @default(cuid()) @db.Char(25)// Identificador único
  nome      String   // Nome da prova
  tag       String?  // Tag opcional
  type      String   // Tipo da prova
  createdAt DateTime @default(now()) // Data de criação
  updatedAt DateTime @updatedAt // Data de atualização

  questoes  ProvaQuestao[] // Relação com questões (muitos para muitos)
}

model ProvaQuestao {
  provaId   String  @db.Char(25)
  questaoId String  @db.Char(25)

  prova     Prova   @relation(fields: [provaId], references: [id], onDelete: Cascade)
  questao   Questao @relation(fields: [questaoId], references: [id], onDelete: Cascade)

  @@id([provaId, questaoId]) // Chave composta para garantir unicidade
}
